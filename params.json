{"body":"DIYCam is a high-level layer built on top of AVFoundation that enables simple setup and implementation of photo and video capture within iOS.\r\n\r\n## Getting Started\r\nThe easiest way to get going with DIYCam is to take a look at the included example application. The XCode project file can be found at `Example > cam.xcodeproj`.\r\n\r\nIn order to use DIYCam, you'll want to add the entirety of the `DIYCam` directory to your project. To get started, simply:\r\n\r\n```objective-c\r\n#import \"DIYCam.h\"\r\n```\r\n\r\n```objective-c\r\nDIYCam *cam         = [[DIYCam alloc] initWithFrame:self.view.frame];\r\ncam.delegate        = self;\r\ncam.captureMode     = DIYCamModePhoto;\r\n[self.view addSubview:cam];\r\n```\r\n\r\nYou'll also need to link the following frameworks:\r\n\r\n```bash\r\nAssetsLibrary.framework\r\nAVFoundation.framework\r\nCoreGraphics.framework\r\nCoreMedia.framework\r\nMobileCoreServices.framework\r\nQuartzCore.framework\r\n```\r\n    \r\n## Configuration\r\nDefault configuration settings can be modified within DIYCamDefaults.h where options for asset library use, orientation, device settings, and quality can be modified.\r\n\r\n---\r\n\r\n## Methods\r\n```objective-c\r\n- (void)capturePhoto;\r\n- (void)captureVideoStart;\r\n- (void)captureVideoStop;\r\n```\r\n\r\n## Delegate Methods\r\n```objective-c\r\n- (void)camReady:(DIYCam *)cam;\r\n- (void)camDidFail:(DIYCam *)cam withError:(NSError *)error;\r\n\r\n- (void)camModeWillChange:(DIYCam *)cam mode:(DIYCamMode)mode;\r\n- (void)camModeDidChange:(DIYCam *)cam mode:(DIYCamMode)mode;\r\n\r\n- (void)camCaptureStarted:(DIYCam *)cam;\r\n- (void)camCaptureStopped:(DIYCam *)cam;\r\n- (void)camCaptureProcessing:(DIYCam *)cam;\r\n- (void)camCaptureComplete:(DIYCam *)cam withAsset:(NSDictionary *)asset;\r\n```\r\n\r\n## Properties\r\n```objective-c\r\n@property (nonatomic, assign) id<DIYCamDelegate> delegate;\r\n@property (nonatomic, assign) DIYCamMode captureMode;\r\n@property (nonatomic, retain) AVCaptureSession *session;\r\n@property (nonatomic, assign, readonly) BOOL isRecording;\r\n```\r\n\r\n---\r\n\r\n## iOS Support\r\nDIYCam is tested on iOS 5 and up. Older versions of iOS may work but are not currently supported.\r\n\r\n## ARC\r\nIf you are including DIYCam in a project that uses [Automatic Reference Counting (ARC)](http://developer.apple.com/library/ios/#releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html), you will need to set the `-fno-objc-arc` compiler flag on all of the DIYCam source files. To do this in Xcode, go to your active target and select the \"Build Phases\" tab. Now select all DIYCam source files, press Enter, insert `-fno-objc-arc` and then \"Done\" to disable ARC for DIYCam.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Cam","tagline":"A “keep it simple, stupid” approach to handling photo and video capture with AVFoundation.","google":"UA-33281153-1"}